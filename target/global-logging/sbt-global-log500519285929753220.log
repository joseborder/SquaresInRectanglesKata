[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\borgesj\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\borgesj\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 1.8.0_312)
[debug]       Load.loadUnit: plugins took 92.0841ms
[debug]       Load.loadUnit: defsScala took 0.3736ms
[debug] [Loading] Scanning directory C:\Users\borgesj\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\borgesj\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.9918 ms
[debug]           Load.resolveProject(global-plugins) took 48.7667ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\borgesj\.sbt\1.0\plugins, plugins: List(<none>))) took 98.7163ms
[debug] [Loading] Done in C:\Users\borgesj\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 125.1972ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2396ms
[debug]     Load.loadUnit(file:/C:/Users/borgesj/.sbt/1.0/plugins/, ...) took 225.8764ms
[debug]   Load.apply: load took 395.0484ms
[debug]   Load.apply: resolveProjects took 8.1392ms
[debug]   Load.apply: finalTransforms took 59.6444ms
[debug]   Load.apply: config.delegates took 6.5547ms
[debug]   Load.apply: Def.make(settings)... took 328.664ms
[debug]   Load.apply: structureIndex took 87.0307ms
[debug]   Load.apply: mkStreams took 1.804ms
[info] loading global plugins from C:\Users\borgesj\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4722.7896ms
[debug]           Load.loadUnit: plugins took 128.4063ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\borgesj\IdeaProjects\RectangleintoSquares\project
[debug]             Load.loadUnit: mkEval took 7.2401ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\borgesj\IdeaProjects\RectangleintoSquares\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1398 ms
[info] loading settings for project rectangleintosquares-build from idea.sbt ...
[debug]               Load.resolveProject(rectangleintosquares-build) took 2.0975ms
[debug]             Load.loadTransitive: finalizeProject(Project(id rectangleintosquares-build, base: C:\Users\borgesj\IdeaProjects\RectangleintoSquares\project, plugins: List(<none>))) took 3.5949ms
[debug] [Loading] Done in C:\Users\borgesj\IdeaProjects\RectangleintoSquares\project, returning: (rectangleintosquares-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1846.897ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.8923ms
[debug]         Load.loadUnit(file:/C:/Users/borgesj/IdeaProjects/RectangleintoSquares/project/, ...) took 1980.177ms
[debug]       Load.apply: load took 1981.6097ms
[debug]       Load.apply: resolveProjects took 0.1781ms
[debug]       Load.apply: finalTransforms took 10.8981ms
[debug]       Load.apply: config.delegates took 0.3705ms
[debug]       Load.apply: Def.make(settings)... took 65.7406ms
[debug]       Load.apply: structureIndex took 22.462ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\borgesj\IdeaProjects\RectangleintoSquares\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3804.2801ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\borgesj\IdeaProjects\RectangleintoSquares
[debug]       Load.loadUnit: mkEval took 0.2263ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\borgesj\IdeaProjects\RectangleintoSquares, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4899 ms
[info] loading settings for project rectangleintosquares from build.sbt ...
[debug]         Load.resolveProject(rectangleintosquares) took 28.0628ms
[debug]       Load.loadTransitive: finalizeProject(Project(id rectangleintosquares, base: C:\Users\borgesj\IdeaProjects\RectangleintoSquares, plugins: List(<none>))) took 30.4561ms
[debug] [Loading] Done in C:\Users\borgesj\IdeaProjects\RectangleintoSquares, returning: (rectangleintosquares)
[debug]     Load.loadUnit: loadedProjectsRaw took 919.1238ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.1965ms
[debug]   Load.loadUnit(file:/C:/Users/borgesj/IdeaProjects/RectangleintoSquares/, ...) took 4730.27ms
[debug] Load.apply: load took 4731.3083ms
[debug] Load.apply: resolveProjects took 0.0726ms
[debug] Load.apply: finalTransforms took 20.7196ms
[debug] Load.apply: config.delegates took 0.2451ms
[debug] Load.apply: Def.make(settings)... took 56.2733ms
[debug] Load.apply: structureIndex took 21.5859ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to RectangleintoSquares (in build file:/C:/Users/borgesj/IdeaProjects/RectangleintoSquares/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51061 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51061, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to RectangleintoSquares (in build file:/C:/Users/borgesj/IdeaProjects/RectangleintoSquares/)
[debug] > Exec(idea-shell, None, None)
